name: Scrape PvPoke Rankings

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Run every 6 hours at 15 minutes past the hour
    - cron: '15 */6 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      
    - name: Set up environment
      run: |
        # Install jq for JSON processing
        sudo apt-get update
        sudo apt-get install -y jq
        
    - name: Fetch Master League rankings
      run: |
        echo "Fetching PvPoke Master League rankings..."
        curl -s "https://raw.githubusercontent.com/pvpoke/pvpoke/refs/heads/master/src/data/rankings/all/overall/rankings-10000.json" | jq . > rankings-10000.json
        
    - name: Generate summary statistics
      run: |
        echo "Generating ranking summaries..."
        
        # Create summary files for easier tracking
        echo "## PvPoke Rankings Summary - $(date -u)" > SUMMARY.md
        echo "" >> SUMMARY.md
        
        # Master League summary
        echo "### Master League (10000 CP)" >> SUMMARY.md
        echo "- Total Pokemon: $(jq length rankings-10000.json)" >> SUMMARY.md
        echo "- Top 10 Pokemon:" >> SUMMARY.md
        jq -r '.[:10] | .[] | "  - \(.speciesName): \(.score | tostring | .[0:6]) points"' rankings-10000.json >> SUMMARY.md
        echo "" >> SUMMARY.md
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are any changes
        git add -A
        
        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Create meaningful commit message
          TIMESTAMP=$(date -u)
          
          # Check which files changed
          CHANGED_FILES=$(git diff --staged --name-only)
          
          # Generate commit message based on changes
          COMMIT_MSG="Rankings update: $TIMESTAMP"
          
          git commit -m "$COMMIT_MSG"
          git push
        fi
